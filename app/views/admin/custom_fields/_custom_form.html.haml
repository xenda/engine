- highlighted_field_name = parent.highlighted_field_name rescue ''

= form.inputs :name => title || :attributes do
  - form.object.custom_fields.each do |field|
    - required = highlighted_field_name == field._name || field.required
    - if @content_type.slug=='events' && field._alias=='category'
      %li{ :class => "select optional" }
        = form.custom_input field._alias.to_sym, :label => field.label, :hint => field.hint, :css => 'toggle' do
          = form.select field._name.to_sym, [['Feria', 'faire'], ['Door to Door', 'door2door'], ['Workshop', 'workshop'], ['Fam Trips', 'fam-trips'],['Roadshow', 'roadshow']]
    - elsif field._alias=='gallery'
      %li{ :class => "select optional" }
        %label{:for => "content_gallery"}
          = field.label
        %ul.gallery
          - gallery_id = ""
          - if @content_type.slug=='events'
            - gallery_id = @content.custom_field_10
          - elsif @content_type.slug.strip == 'news' || @content_type.slug.strip == 'articles'
            - gallery_id = @content.custom_field_6
          - @galleries.each do |gallery|
            - if gallery_id && gallery.id == gallery_id
              - if gallery.data
                %li{:class => "selected"}
                  %a.gallery{:href => "#", :id => gallery.id}
                    %img{:src => gallery.cover_photo}
                      = gallery.data['name']
            - else
              - if gallery.data
                %li
                  %a.gallery{:href => "#", :id => gallery.id}
                    %img{:src => gallery.cover_photo}
                      = gallery.data['name']
        = hidden_field_tag "content[#{field._alias.to_sym}]", gallery_id
    - else
      - if field.string?
        = form.input field._alias.to_sym, :label => field.label, :hint => field.hint, :required => required
      - elsif field.text?
        = form.input field._alias.to_sym, :label => field.label, :hint => field.hint, :as => :text, :required => required, :input_html => { :class => field.text_formatting }
      - elsif field.category?
        = form.custom_input field._alias.to_sym, :label => field.label, :hint => field.hint, :css => 'toggle' do
          = form.select field._name.to_sym, field.ordered_category_items.collect { |item| [item.name, item.id] }
          %button.button.light.edit-categories-link{ :type => 'button', :'data-url' => edit_admin_custom_field_path(parent.class.model_name.underscore, parent.slug, field) }
            %span!= t('.edit_categories')
      - elsif field.boolean?
        = form.custom_input field._alias.to_sym, :label => field.label, :hint => field.hint, :css => 'toggle' do
          = form.check_box field._alias.to_sym
      - elsif field.date?
        = form.input field._alias.to_sym, :label => field.label, :hint => field.hint, :input_html => { :class => 'date' }
      - elsif field.file?
        = form.custom_input field._alias.to_sym, :label => field.label, :hint => field.hint, :css => 'file' do
          = form.file_field field._name.to_sym
          - if form.object.send(:"#{field._name}?")
            %p.remove
              %strong
                = link_to File.basename(form.object.send(field._name).url), form.object.send(field._name).url
              %span
                &nbsp;/&nbsp;
                != t('.delete_file')
                = form.check_box :"remove_#{field._name}"
  %li{ :class => "select optional" }
    = form.input :locale, :as => :select, :collection => [['EspaÃ±ol', 'es'], ['English', 'en']], :include_blank => false

- if @content_type.slug=='events'
  %fieldset.inputs
    %legend
      %span Add resource
    %ol{:id => "resources_list"}
      %li
        %button{:class => "button light add", :type => "button", :id => "add_resource"}
          %span + add
      %li.file{:id => "content_resource_file_input"}
        = label_tag "resource_custom_field_3_0", "File:"
        = file_field_tag "resource[custom_field_3][]", :id => "resource_custom_field_3_0"
    
    - unless @content.resources.empty?
      %ul{ :id => 'contents-list', :class => 'list'}
        - @content.resources.each do |resource|
          %li.content{ :id => "content-#{resource._id}" }
            %em
            %strong
              = link_to resource.custom_field_3_filename, edit_admin_content_path('resources', resource)
            .more
              %span
                != t('admin.contents.index.updated_at')
              = l content.updated_at, :format => :short rescue 'n/a'
              = link_to image_tag('admin/list/icons/trash.png'), admin_content_path('resources', resource), :class => 'remove', :confirm => t('admin.messages.confirm'), :method => :delete, :remote => true
= render '/admin/custom_fields/category_tmpl'
